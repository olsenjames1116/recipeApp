@use './variables' as vars;

// Flex and center an item.
@mixin flexCenter($direction) {
	display: flex;
	flex-direction: $direction;
	justify-content: center;
	align-items: center;
}

// Flex, center and add padding.
@mixin flexCenterWithPadding($direction) {
	@include flexCenter($direction);
	padding: 20px;
}

// Fill page and flex contents.
@mixin fillAndFlex($direction) {
	@include flexCenter($direction);
	height: 100vh;
}

// Sets the style for logos.
@mixin logoHeightAndWidth {
	height: 75px;
	width: 75px;
}

// Display and style an icon for account form inputs.
@mixin accountFormIcon($image) {
	height: 30px;
	padding-left: 30px;
	background: $image no-repeat 0px center;
	background-size: contain;
}

// Set height and width for close image.
@mixin closeIconSize {
	width: 20px;
	height: 20px;
}

// Position and center a popup.
@mixin positionCenter {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

// Size component to fill page.
@mixin fillPage {
	height: 100vh;
	display: grid;
	grid-template-rows: auto 1fr;
	overflow: scroll;
}

// Add base style for all buttons.
@mixin styleButton($backgroundColor, $transitionColor, $textColor) {
	border-radius: 5px;
	padding: 5px;
	font-size: 20rem;
	background-image: (
		linear-gradient(270deg, $backgroundColor, $transitionColor)
	);
	background-size: 400% 400%;
	transition: transform 0.6s;
	overflow: hidden;
	position: relative;
	color: $textColor;
}

// Style a button to change color and shine on hover and focus.
@mixin styleButtonHoverAndFocus {
	&::before {
		content: '';
		display: block;
		position: absolute;
		background: rgba(255, 255, 255, 0.5);
		width: 60px;
		height: 100%;
		top: 0;
		filter: blur(30px);
		transform: translateX(-100px) skewX(-15deg);
	}

	&::after {
		content: '';
		display: block;
		position: absolute;
		background: rgba(255, 255, 255, 0.2);
		width: 30px;
		height: 100%;
		top: 0;
		filter: blur(5px);
		transform: translateX(-100px) skewX(-15deg);
	}

	&:hover,
	&:focus {
		background-image: (
			linear-gradient(to left, vars.$secondaryDark, vars.$champagne)
		);
		color: black;
		transform: scale(1.1);

		&::before,
		&::after {
			transform: translateX(300px) skewX(-15deg);
			transition: 0.7s;
		}
	}
}

// Adds style to a link and style for hover and focus.
@mixin styleLinkHoverAndFocus($color) {
	color: $color;
	position: relative;

	&::before {
		content: '';
		position: absolute;
		width: 100%;
		height: 4px;
		border-radius: 4px;
		background-color: $color;
		bottom: 0;
		left: 0;
		transform-origin: right;
		transform: scaleX(0);
		transition: transform 0.3s ease-in-out;
	}

	&:hover::before,
	&:focus::before {
		transform-origin: left;
		transform: scale(1);
	}
}

// Add style for recipe interactions on hover and focus.
@mixin styleRecipeHoverAndFocus() {
	&:hover,
	&:focus {
		& > .image,
		& > .span {
			filter: contrast(0.6);
			transform: scale(1.1);
		}
	}
}

// Add style for delete icon on hover and focus.
@mixin styleDeleteHoverAndFocus {
	&:hover,
	&:focus {
		filter: invert(10%) sepia(70%) saturate(3263%) hue-rotate(354deg)
			brightness(103%) contrast(112%);
	}
}
